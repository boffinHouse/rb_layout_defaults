// ====================================================================
//  Generate Grid
//
//  variable:
//  Dependency: [
//      global-style-config
//  ]
//=====================================================================
@mixin rb-generate-layout-styles($configs) {
	//Styles breakpoints
	@each $className, $config in $configs {
		$gutter: map-get($config, gutter);
		$flexOrderSize: map-get($config, flexOrderSize);

		@if $className == 'all' {
			@include rb-layout-styles($className, $gutter, $flexOrderSize);
			@include rb-generate-layout-columns();
		} @else {
			@media #{map-get($config, media)} {
				@include rb-layout-styles($className, $gutter, $flexOrderSize);
			}
		}


	}
}

// ====================================================================
// global-style-config
//
//  variable:
//  Dependency: [
//      size-generator,
//      gutter-values,
//      order
//  ]
//=====================================================================
@mixin rb-layout-styles($className, $gutter, $flexOrderSize) {
	@include rb-size-generator($className);
	@include rb-size-gutter-generator($className, $gutter);
	@include rb-flex-order-generator($className, $flexOrderSize);
	@include rb-layout-offset($className);
}

// ====================================================================
//  Generate layout columns
//
//=====================================================================
@mixin rb-generate-layout-columns() {

	.is-column-group {
		display: flex;
		flex-wrap: wrap;

		.is-column-group {
			flex: 1;
		}

		//Only add flex behaviour to is-size element if in is-column-group
		> [class*=is-size-] {
			display: flex;
			flex-wrap: wrap;
		}
	}


	.is-unequal-height {
		display: block;
	}

}

@mixin rb-layout-offset($className) {

	@if $className == 'all' {
		$offsetType: '';

	} @else {
		$offsetType: '-' + $className;
	}

	.is-offset-right#{$offsetType} {
		margin-left: auto;
	}

	.is-offset-left#{$offsetType} {
		margin-right: auto;
	}

	.is-offset-middle#{$offsetType} {
		margin: auto;
	}
}

// ====================================================================
//  Generate Gutters Columns
//
//=====================================================================
@mixin rb-colgroup-gutter-equalizer($gutterHorizontal, $gutterVertical) {
	.is-column-group {
		padding-right: 0;
		padding-left: 0;

		&.is-gutter {
			margin-right: (-$gutterHorizontal / 2);
			margin-left: (-$gutterHorizontal / 2);
			margin-top: (-$gutterVertical / 2);
			margin-bottom: (-$gutterVertical / 2);
		}

		&.is-gutter-vertical {
			margin-top: (-$gutterVertical / 2);
			margin-bottom: (-$gutterVertical / 2);
		}

		&.is-gutter-horizontal {
			margin-right: (-$gutterHorizontal / 2);
			margin-left: (-$gutterHorizontal / 2);
			padding-right: 0;
			padding-left: 0;
		}
	}
}

@mixin rb-size-gutter-generator($className, $gutter) {

	@if type-of($gutter) == 'map' {

		@if map-has-key($gutter, horizontal) {
			$gutterHorizontal: map-get($gutter, horizontal);
		}
		@if map-has-key($gutter, vertical) {
			$gutterVertical: map-get($gutter, vertical);
		}

		.is-column-group {

			&.is-gutter {
				padding-right: ($gutterHorizontal / 2);
				padding-left: ($gutterHorizontal / 2);

				 > [class*=is-size-] {
					margin-top: ($gutterVertical / 2);
					margin-bottom: ($gutterVertical / 2);
					padding-right: ($gutterHorizontal / 2);
					padding-left: ($gutterHorizontal / 2);
				 }

				.is-column-group {
					padding-right: 0;
					padding-left: 0;

					&.is-gutter {
						margin-right: (-$gutterHorizontal / 2);
						margin-left: (-$gutterHorizontal / 2);
						margin-top: (-$gutterVertical / 2);
						margin-bottom: (-$gutterVertical / 2);
					}

					&.is-gutter-vertical {
						margin-top: (-$gutterVertical / 2);
						margin-bottom: (-$gutterVertical / 2);
					}

					&.is-gutter-horizontal {
						margin-right: (-$gutterHorizontal / 2);
						margin-left: (-$gutterHorizontal / 2);
					}
				}
			}

			&.is-gutter-vertical {

				> [class*=is-size-]  {
					margin-top: ($gutterVertical / 2);
					margin-bottom: ($gutterVertical / 2);
				}

				.is-column-group {
					padding-right: 0;
					padding-left: 0;

					&.is-gutter,
					&.is-gutter-vertical {
						margin-top: (-$gutterVertical / 2);
						margin-bottom: (-$gutterVertical / 2);
					}

				}
			}

			&.is-gutter-horizontal {
				padding-right: ($gutterHorizontal / 2);
				padding-left: ($gutterHorizontal / 2);

				> [class*=is-size-]  {
					padding-right: ($gutterHorizontal / 2);
					padding-left: ($gutterHorizontal / 2);
				}

				.is-column-group {
					padding-right: 0;
					padding-left: 0;

					&.is-gutter,
					&.is-gutter-horizontal {
						margin-right: (-$gutterHorizontal / 2);
						margin-left: (-$gutterHorizontal / 2);
					}
				}
			}

		}
	}
}
// ====================================================================
//  Order Generator
//
//=====================================================================
@mixin rb-flex-order-generator($className, $amount: 0) {
	$i: 1;

	@if type-of($amount) != 'number' {
		$amount: 0;
	}

	@if $className == 'all' {
		$orderType: '';
	} @else {
		$orderType: '-' + $className;
	}

	@while $i <= $amount {
		.is-order-#{$i}#{$orderType} {
			order: #{$i}
		}

		&.is-order-minus-#{$i}#{$orderType} {
			order: #{-$i}
		}

		$i: $i + 1;
	}

}

// ====================================================================
//  Size Generator
//
//=====================================================================
@mixin rb-size-generator($className) {
	$i: 5;
	$steps: 5;

	@if $className == 'all' {
		$colomnType: '';

	} @else {
		$colomnType: '-' + $className;
	}

	@while $i <= 100 {

		//If no width is desired
		@if $i == 100 {
			.is-size-auto#{$colomnType} {
				width: auto;
			}

			//Element will take available space
			.is-size-flex#{$colomnType} {
				flex: 1;
				width: auto;
			}

			//Element will take twice the available space
			.is-size-flex-twice {
				flex: 2;
				width: auto;
			}
		}

		// create width: 33%
		@if $i > 30 and $i <= 35 {
			.is-size-33#{$colomnType} {
				width: 33.33%;
			}
		}

		// create width: 66%
		@if $i > 65 and $i <= 70 {
			.is-size-66#{$colomnType} {
				width: 66.66%;
			}
		}

		// create width: 16%
		@if $i > 15 and $i <= 20 {
			.is-size-16#{$colomnType} {
				width: 16.66%;
			}
		}

		// create
		&.is-size-#{$i}#{$colomnType} {
			width: $i * 1%;
		}

		// increment the counter
		$i: $i + $steps;
	}
}




